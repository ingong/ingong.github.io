{"componentChunkName":"component---src-templates-blog-post-js","path":"/Web/[Web] 이벤트/","result":{"data":{"site":{"siteMetadata":{"title":"Ingong's Log","author":"ingong","siteUrl":"https://ingong.github.io","comment":{"disqusShortName":"","utterances":"ingong/ingong.github.io"},"sponsor":{"buyMeACoffeeId":"ingong"}}},"markdownRemark":{"id":"60afe46b-2ac7-5f4d-9e30-bdffd288d6ea","excerpt":"다양한 경험을 통해 학습했던 내용을 저만의 언어로 정리하는데 목적을 두고 있는 글입니다. 이벤트 위임과 장점? 이벤트 리스너를 하위 요소에 추가하는 대신 상위 요소에 추가하는 기법이다. 리스너는 DOM…","html":"<p>다양한 경험을 통해 학습했던 내용을 저만의 언어로 정리하는데 목적을 두고 있는 글입니다.</p>\n<h2 id=\"이벤트-위임과-장점\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%9C%84%EC%9E%84%EA%B3%BC-%EC%9E%A5%EC%A0%90\" aria-label=\"이벤트 위임과 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 위임과 장점?</h2>\n<p>이벤트 리스너를 하위 요소에 추가하는 대신 상위 요소에 추가하는 기법이다. 리스너는 DOM의 이벤트 버블링으로 인해 하위 요소에서 이벤트가 발생될 때마다 실행된다. 이에 대한 이점은 다음과 같다.</p>\n<ul>\n<li>각 하위 항목에 대해 이벤트 핸들러를 연결하지 않고 상위 요소에 하나의 단일 핸들러만 필요해 메모리 사용 공간이 줄어든다.</li>\n<li>제거된 요소에서 이벤트 핸들러를 해제하고 새 요소에 대해 새로운 이벤트를 바인딩할 필요가 없다.</li>\n</ul>\n<p>Vanilla JavaScript 로 달력을 구현하는 과정에서 이벤트 위임을 사용해 각각의 일자에 이벤트 핸들러를 부착하지 않고 이벤트 처리를 한 경험이 있다. 이 때 <code class=\"language-text\">closest</code> 를 활용했다.</p>\n<h2 id=\"eventstoppropagation\" style=\"position:relative;\"><a href=\"#eventstoppropagation\" aria-label=\"eventstoppropagation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>event.stopPropagation()</h2>\n<p>이벤트 버블링과 캡쳐링 전달 방식이 아닌 원하는 요소의 이벤트만 신경써서 활용할 때 해당 웹 API 를 사용한다. 이벤트 버블링의 경우에는 해당 요소의 이벤트만 발생시키고 상위 요소로 전파하는 것을 막고, 캡쳐링의 경우에는 최상위 요소의 이벤트만 동작시키고 하위 요소들로 전파하지 않는다.</p>\n<h2 id=\"html-문서의-생명주기-이벤트\" style=\"position:relative;\"><a href=\"#html-%EB%AC%B8%EC%84%9C%EC%9D%98-%EC%83%9D%EB%AA%85%EC%A3%BC%EA%B8%B0-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"html 문서의 생명주기 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML 문서의 생명주기 이벤트</h2>\n<ol>\n<li>DOMContentLoaded</li>\n</ol>\n<p>브라우저가 HTML을 전부 읽고 DOM 트리를 완성하는 즉시 발생한다. 이미지 파일이나 스타일시트 등의 기타 자원은 기다리지 않는다. DOM이 준비된 것을 확인한 후 원하는 DOM 노드를 찾아 핸들러를 등록해 인터페이스를 초기화할 때 사용한다.</p>\n<ol>\n<li>load</li>\n</ol>\n<p>HTML로 DOM 트리를 만드는게 완성되었을 뿐만 아니라 이미지, 스타일 시트와 같은 외부 자원도 모두 불러오는 것이 끝났을 때 발생한다. 이미지 사이즈를 확인할 때 등 외부 자원이 로드된 후이기 때문에 스타일이 적용된 상태이므로 화면에 뿌려지는 실제 크기를 확인할 수 있다.</p>\n<ol>\n<li>beforeunload/unload</li>\n</ol>\n<p>사용자가 페이지를 떠날 때 발생한다. <code class=\"language-text\">beforeunload</code> 는 사용자가 사이트를 떠나려할 때, 변경되지 않은 사항들을 저장했는지 확인시켜줄 때 사용하며, <code class=\"language-text\">unload</code>는 사용자가 진짜 떠나기 전에 사용자 분석 정보를 담은 통계자료를 전송하고자 할 때 사용한다.</p>","frontmatter":{"title":"[Web] 이벤트","date":"March 17, 2022"}}},"pageContext":{"slug":"/Web/[Web] 이벤트/","previous":{"fields":{"slug":"/JS/[JS] this/"},"frontmatter":{"title":"[JS] this"}},"next":{"fields":{"slug":"/JS/[JS] 함수/"},"frontmatter":{"title":"[JS] 함수(Function)"}}}},"staticQueryHashes":["2486386679","3128451518"]}